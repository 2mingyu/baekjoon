"""
1: 1 (1)
2: 2 (1+1, 2)
3: 4 (1+1+1, 1+2, 2+1, 3)
4: 7 (1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2, 1+3, 3+1)
5: 13 (1+1+1+1+1, 1+1+1+2, 1+1+2+1, 1+2+1+1, 2+1+1+1, 1+2+2, 2+1+2, 2+2+1, 1+1+3, 1+3+1, 3+1+1, 2+3, 3+2)

case n,0 : 짝수인 방법의 수
case n,1 : 홀수인 방법의 수

case n,0 : case n-1,1 에서 1 더한 경우들 + case n-2,1 에서 2 더한 경우들 + case n-3,1 에서 3 더한 경우들
case n,1 : case n-1,0 에서 1 더한 경우들 + case n-2,0 에서 2 더한 경우들 + case n-3,0 에서 3 더한 경우들

??? s[n][0] = s[n-1][1] + s[n-2][1] + s[n-3][1] ???
??? s[n][1] = s[n-1][0] + s[n-2][0] + s[n-3][0] ???
"""
import sys

s = [[0, 0], [0, 1], [1, 1], [2, 2]]    # s[n][m]은 m개를 사용해 n을 1, 2, 3의 합으로 나타내는 방법의 수
for n in range(4, 100001):
    tmps = []
    tmps.append((s[n-1][1] + s[n-2][1] + s[n-3][1]) % 1000000009)
    tmps.append((s[n-1][0] + s[n-2][0] + s[n-3][0]) % 1000000009)
    s.append(tmps)
T = int(input())
for _ in range(T):
    n =int(sys.stdin.readline())
    print(s[n][1], s[n][0])